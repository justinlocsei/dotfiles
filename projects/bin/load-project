#!/usr/bin/env ruby

require "yaml"

PROJECTS_DIR = File.expand_path("~/projects")

project_id = ARGV[0]
if project_id.nil?
  STDERR.puts "Usage: load-project PROJECT_NAME"
  exit 1
end

project_path = File.join(PROJECTS_DIR, "#{project_id}.yml")
unless File.file?(project_path)
  STDERR.puts "No file found at #{project_path} for the #{project_id} project"
  exit 1
end

project = YAML.load_file(project_path)
project_name = project["name"]

# Open all Mac applications using `open` or a custom command
project["applications"].each do |application|
  open_command = application["command"] || %Q{open -a "#{application['name']}"}
  system(open_command)
end

# If a tmux session for the project already exists, join it and exit
if system("tmux list-sessions | grep '^#{project_name}:'")
  system("tmux attach-session -t '#{project_name}'")
  exit 0
end

# Create a new tmux session for the project
system("tmux new-session -d -s '#{project_name}'")

# Create the desired window and pane layout for the tmux session
project["terminal"]["tabs"].each do |tab|
  tab["panes"].each_with_index do |pane, i|
    commands = ["tmux"]

    case pane["split"]
    when nil
      commands << %Q{new-window -n "#{tab['name']}"}
    when "horizontal"
      commands << "split-window -h"
    when "vertical"
      commands << "split-window -v"
    end

    commands << %Q{-c "#{File.expand_path(pane['directory'])}"} if pane["directory"]

    system(commands.join(" "))
    system("tmux select-pane -t #{i+1}") if i > 0
  end

  system("tmux select-pane -t 1")
end

# Kill the initial window and open the tmux session with the first window active
system("tmux kill-window -t 1")
system("tmux select-window -t 1")
system("tmux attach-session -t '#{project_name}'")
